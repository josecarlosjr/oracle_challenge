pipeline {
    agent {
        label 'docker-host'
    }
    options {
        disableConcurrentBuilds()
        disableResume()
    }

    /*
    parameters {
        string name: 'ENVIRONMENT_NAME', trim: true     
        password defaultValue: 'mysql123', description: 'Password to use for MySQL container - root user', name: 'MYSQL_PASSWORD'
        string name: 'MYSQL_PORT', trim: true, defaultValue: '3306' 
        booleanParam(name: 'SKIP_STEP_1', defaultValue: false, description: 'STEP 1 - RE-CREATE DOCKER IMAGE')
    }
    */

    stages {
        /*
        stage('Checkout GIT repository') {
            steps {     
              script {
                git branch: 'master',
                credentialsId: '21f01d09-06da9cc35103',
                url: 'git@mysecret-nonexistent-repo/jenkins.git'
              }
            }
        }
        */
        stage('Create latest Docker image') {
            steps {     
              script {
               
                if (!params.SKIP_STEP_1){    
                    echo "Creating docker image with name ${params.ENVIRONMENT_NAME} using port: ${params.MYSQL_PORT}"
                    sh """
                    sed 's/<PASSWORD>/${params.MYSQL_PASSWORD}/g' include/create_developer.template > include/create_developer.sql
                    """

                    sh """
                    docker build . -t ${params.ENVIRONMENT_NAME}:latest 
                    """

                }else{
                    echo "Skipping STEP1"
                }
              }
            }
          }
        stage('Start new container using latest image and create user') {
            steps {     
              script {
                def dateTime = (sh(script: "date +%Y%m%d%H%M%S", returnStdout: true).trim())
                def containerName = "${params.ENVIRONMENT_NAME}_${dateTime}"
                def port = params.MYSQL_PORT.toInteger()
                    
                    if (port < 3306 || port > 3314) {
                        error("Invalid MySQL port. Please provide a valid port number between 3306 and 3314.")
                    }
                
                sh """
                docker run -itd --name ${containerName} --rm -e MYSQL_ROOT_PASSWORD=${params.MYSQL_PASSWORD} -p ${params.MYSQL_PORT}:3306 ${params.ENVIRONMENT_NAME}:latest
                """
                // Get the container IP address
                def containerIP = sh(script: "docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${containerName}", returnStdout: true).trim()
               
                sh """
                
                while ! nc -z ${containerIP} 3306; do
                    sleep 1
                    echo "Waiting for MySQL to be ready..."
                done
                echo 'Connection established'
                """
                
                sh """
                docker exec ${containerName} /bin/bash -c 'mysql --user="root" --password="${params.MYSQL_PASSWORD}" < /scripts/create_developer.sql'
                """
                
                echo "Docker container created: ${containerName}"

              }
           }        
        }
   }
}
